{"name":"Mouse Melon DSL for BDD specs","tagline":"MouseMelon is a simple DSL which allows to write acceptance BDD specs in Gherkin-like language without any parser.","body":"# MouseMelon a.k.a. Mexikan Gherkin\r\n\r\nMouseMelon is a pseudo-Gherkin DSL designed to be used in RSpec acceptance specs but it may be used elsewhere.\r\n\r\n![Example of Gherkin feature vs MouseMelon spec](https://github.com/wojtha/mouse_melon/raw/master/assets/gherkin_vs_mouse_melon.png?raw=true \"Gherkin vs MouseMelon\")\r\n\r\n## Notable features:\r\n\r\n  * It runs inside RSpec (Minitest support may come later): just include module and you're ready.\r\n  * `Given`, `When`, `Then` are just methods which calls the step definitions directly.\r\n  * You can use symbols `I_am_registered_user` or feature steps `I am registered user`.\r\n  * You can define the steps globally, locally or mix them into the specs.\r\n  * Steps can have arguments `I register user`.\r\n  * Command line tool to generate step definitions.\r\n  * No fancy output of tested steps like Cucumber or Spinach.\r\n\r\n### Currently supported/tested environment:\r\n\r\n  * RSpec 3.3.x\r\n  * Ruby 2.1.x\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n```ruby\r\ngem 'mouse_melon'\r\n```\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install mouse_melon\r\n\r\nInclude it to RSpec helper\r\n\r\n```ruby\r\n  RSpec.configure do |config|\r\n    config.include MouseMelon::DSL, :type => :feature\r\n  end\r\n```\r\n\r\n## Usage\r\n\r\nHere is demonstration of various possible styles:\r\n\r\n```ruby\r\nfeature 'MouseMelon features' do\r\n  # Steps shared via modules\r\n  include CommonSteps\r\n\r\n  scenario 'Steps as methods' do\r\n    given_is_defined\r\n    when_is_defined\r\n    then_is_defined\r\n  end\r\n\r\n  scenario 'Steps as symbols' do\r\n    Given :given_is_defined\r\n     When :when_is_defined\r\n     Then :then_is_defined\r\n  end\r\n\r\n  scenario 'Steps as strings' do\r\n    Given 'given is defined'\r\n     When 'when is defined'\r\n     Then 'then is defined'\r\n      And 'and is defined'\r\n      And 'and it has arguments', 'hello', 1\r\n  end\r\n\r\n  scenario 'Steps as Steps' do\r\n    Step 'given is defined'\r\n    Step 'when is defined'\r\n    Step 'then is defined'\r\n  end\r\n\r\n  scenario 'Steps as triangle bullets' do\r\n    ‣ 'given is defined'\r\n    ‣ 'when is defined'\r\n    ‣ 'then is defined'\r\n  end\r\n\r\n  scenario 'Steps as circle bullets' do\r\n    • 'given is defined'\r\n    • 'when is defined'\r\n    • 'then is defined'\r\n  end\r\n\r\n  # INLINE STEP DEFINITIONS\r\n\r\n  def given_is_defined\r\n    puts 'GIVEN'\r\n  end\r\n\r\n  def when_is_defined\r\n    puts 'WHEN'\r\n  end\r\n\r\n  step 'then is defined' do\r\n    puts 'THEN'\r\n  end\r\n\r\n  step 'and is defined' do\r\n    puts 'AND'\r\n  end\r\n\r\n  step 'and it has arguments' do |*args|\r\n    puts \"AND with args #{args.inspect}\"\r\n  end\r\nend\r\n```\r\n\r\nFor more examples look inside `examples` and `spec` folders.\r\n\r\n## Development\r\n\r\nAfter checking out the repo, run `bin/setup` to install dependencies. Then, run `rake spec` to run the tests. You can also run `bin/console` for an interactive prompt that will allow you to experiment.\r\n\r\nTo install this gem onto your local machine, run `bundle exec rake install`. To release a new version, update the version number in `version.rb`, and then run `bundle exec rake release`, which will create a git tag for the version, push git commits and tags, and push the `.gem` file to [rubygems.org](https://rubygems.org).\r\n\r\n## Contributing\r\n\r\nBug reports and pull requests are welcome on GitHub at https://github.com/[USERNAME]/mouse_melon. This project is intended to be a safe, welcoming space for collaboration, and contributors are expected to adhere to the [Contributor Covenant](contributor-covenant.org) code of conduct.\r\n\r\n\r\n## License\r\n\r\nThe gem is available as open source under the terms of the [MIT License](http://opensource.org/licenses/MIT).","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}